<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- =========================================================================================================== -->
	<!-- Project Details -->
	<!-- =========================================================================================================== -->

	<groupId>com.crm</groupId>
	<artifactId>salesforce</artifactId>
	<version>1.0.0</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
	</parent>

	<!-- =========================================================================================================== -->
	<!-- Project Properties -->
	<!-- =========================================================================================================== -->

	<properties>
		<!-- Project Properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<!-- Library Versions -->
		<jackson-core.version>2.9.4</jackson-core.version>
		<slf4j-api.version>1.7.24</slf4j-api.version>
		<!-- Maven Plugin Versions -->
		<jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>

		<!-- Docker Properties -->
		<docker.repository.name>203061916556.dkr.ecr.us-east-1.amazonaws.com</docker.repository.name>

		<!-- Developer Tools -->
		<lombok.version>1.16.18</lombok.version>
		<modelmapper.version>1.1.0</modelmapper.version>

	</properties>

	<dependencies>
		<!-- Springboot Libraries -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Jackson Serialization Libraries -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-core.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-core.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson-core.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jackson-core.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<version>${jackson-core.version}</version>
		</dependency>

		<!-- Unit Testing Libraries -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Developer Tools -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>${modelmapper.version}</version>
		</dependency>

	</dependencies>

	<!-- =========================================================================================================== -->
	<!-- Project Build Configuration -->
	<!-- =========================================================================================================== -->

	<build>
		<plugins>

			<!-- Spring Boot Application -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Code Coverage Tools -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/Application.class</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Docker Image Creator Plugin -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.15.9</version>
				<extensions>true</extensions>
				<configuration>
					<images>
						<image>
							<name>${docker.repository.name}/${project.name}:${project.version}</name>
							<alias>${project.artifactId}</alias>
							<build>
								<from>${docker.repository.name}/accent-docker-base-java:1.0.0</from>
								<tags><!-- define additional tags for the image -->
									<tag>latest</tag>
								</tags>
								<assembly>
									<descriptor>assembly.xml</descriptor>
								</assembly>
								<ports>
									<port>8080</port>
								</ports>
								<cmd>
									<shell>
										java -jar /maven/${project.artifactId}-${project.version}.jar
									</shell>
								</cmd>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>build-docker-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>push-docker-image-to-registry</id>
						<phase>deploy</phase>
						<goals>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>